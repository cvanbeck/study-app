<% // Ensure navLinks is defined navLinks=navLinks || []; // Separate account-related links from others const
    accountLinks=navLinks.filter(link=> link.route.startsWith('/account'));
    const otherLinks = navLinks.filter(link => !link.route.startsWith('/account'));

    // Sort links by priority descending
    const sortedOtherLinks = otherLinks.sort((a, b) => b.priority - a.priority);
    const sortedAccountLinks = accountLinks.sort((a, b) => b.priority - a.priority);

    // Find home link from the other links
    const homeLink = sortedOtherLinks.find(link => link.route === '/');

    // Group remaining other links (ignoring the home link)
    const groupedLinks = sortedOtherLinks.reduce((acc, link) => {
    if (link.route === '/') return acc; // Home handled separately
    const base = `/${link.route.split('/').filter(Boolean)[0] || ''}`;
    acc[base] = [...(acc[base] || []), link];
    return acc;
    }, {});
%>

<nav class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
    <div class="container-fluid">
        <a class="navbar-brand" href="/">
            <%= appName %>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarContent">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarContent">
            <!-- Left side navigation -->
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <%- include('navitems', { navLinks: sortedOtherLinks, homeLink: homeLink, groupedLinks: groupedLinks
                    }) %>
            </ul>
            <!-- Right side account navigation -->
            <% if (sortedAccountLinks.length> 0) { %>
                <ul class="navbar-nav ms-auto mb-2 mb-lg-0">
                    <%- include('navitems', { navLinks: sortedAccountLinks, homeLink: null, groupedLinks: {} }) %>
                </ul>
                <% } %>
        </div>
    </div>
</nav>